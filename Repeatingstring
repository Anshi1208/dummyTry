#include <stdio.h>
#include <string.h>
#include <ctype.h>

#define MAX_WORDS 100
#define MAX_WORD_LEN 50

// Function to convert a string to lowercase
void toLowerCase(char str[]) {
    for (int i = 0; str[i]; i++) {
        str[i] = tolower(str[i]);
    }
}

// Function to remove punctuation from a string
void removePunctuation(char str[]) {
    int i, j = 0;
    char temp[MAX_WORD_LEN];
    for (i = 0; str[i]; i++) {
        if (isalnum(str[i]) || isspace(str[i])) {
            temp[j++] = str[i];
        }
    }
    temp[j] = '\0';
    strcpy(str, temp);
}

// Function to find the most frequent word in the string
void mostFrequentWord(char str[]) {
    char words[MAX_WORDS][MAX_WORD_LEN]; // Array to store words
    int count[MAX_WORDS] = {0};          // Array to store word counts
    int wordIndex = 0;

    toLowerCase(str);
    removePunctuation(str);

    // Tokenize the string into words
    char *token = strtok(str, " ");
    while (token != NULL) {
        int found = 0;
        // Check if the word already exists in the array
        for (int i = 0; i < wordIndex; i++) {
            if (strcmp(words[i], token) == 0) {
                count[i]++;
                found = 1;
                break;
            }
        }

        // If it's a new word, add it to the array
        if (!found) {
            strcpy(words[wordIndex], token);
            count[wordIndex]++;
            wordIndex++;
        }
        token = strtok(NULL, " ");
    }

    // Find the word with the maximum count
    int maxCount = 0;
    char mostFrequent[MAX_WORD_LEN];
    for (int i = 0; i < wordIndex; i++) {
        if (count[i] > maxCount) {
            maxCount = count[i];
            strcpy(mostFrequent, words[i]);
        }
    }

    printf("The most frequent word is '%s' with %d occurrences.\n", mostFrequent, maxCount);
}

int main() {
    char text[] = "Hello world! This world is amazing. Hello everyone!";

    mostFrequentWord(text);

    return 0;
}
